#!/bin/bash
# Script makefast: build y deploy rápido a PSVita usando vitacompanion
# Requiere: vitacompanion activo en la Vita, eboot.bin generado, curl y netcat (nc)

# set -e  # Desactivado para debug

cd "$(dirname "$0")"

# Leer IP desde ip_vita.txt
IP_FILE="$(dirname "$0")/ip_vita.txt"
echo "[makefast] Leyendo IP de $IP_FILE..."
if [ -f "$IP_FILE" ]; then
    PSVITAIP=$(head -n 1 "$IP_FILE" | tr -d '\r\n')
else
    echo "[makefast] Error: ip_vita.txt no encontrado."
    exit 1
fi
echo "[makefast] IP Vita: $PSVITAIP"

## Obtener TITLEID desde CMakeLists.txt (VITA_TITLEID)
echo "[makefast] Obteniendo TITLEID de CMakeLists.txt..."
TITLEID=$(grep -Po 'set\(VITA_TITLEID\s+"\K[^"]+' CMakeLists.txt | head -n1)
if [ -z "$TITLEID" ]; then
    echo "[makefast] Error: No se pudo obtener el TITLEID de CMakeLists.txt."
    exit 1
fi
echo "[makefast] TITLEID: $TITLEID"

# Ruta del SELF generado
BUILD_DIR="cmake-build-psv"
SELF_PATH="${BUILD_DIR}/ZeroTierOneVitaTest.self"
EBOOT_PATH="${BUILD_DIR}/eboot.bin"

echo "[makefast] Verificando existencia de $SELF_PATH..."
if [ ! -f "$SELF_PATH" ]; then
    echo "[makefast] Error: No se encontró $SELF_PATH. Compila primero."
    exit 1
fi
cp "$SELF_PATH" "$EBOOT_PATH"
echo "[makefast] Copiado $SELF_PATH a $EBOOT_PATH"

# 1. Detener la app si está corriendo
echo "[makefast] Enviando destroy..."
(echo destroy | nc "$PSVITAIP" 1338) || echo "[makefast] destroy falló (puede ser normal si no hay app en ejecución)"
echo "[makefast] Destroy enviado."

# Esperar a que la Vita libere eboot.bin (máx 10s)
WAIT=0
while true; do
    curl -s --user anonymous: --list-only "ftp://$PSVITAIP:1337/ux0:/app/$TITLEID/eboot.bin" | grep -q eboot.bin
    if [ $? -eq 0 ]; then
        curl -s --user anonymous: -Q "RNFR ux0:/app/$TITLEID/eboot.bin" -Q "RNTO ux0:/app/$TITLEID/eboot.bin" "ftp://$PSVITAIP:1337/" && break
    else
        break
    fi
    sleep 1
    WAIT=$((WAIT+1))
    if [ $WAIT -ge 10 ]; then
        echo "[makefast] Advertencia: eboot.bin sigue bloqueado tras 10s, intentando subir de todas formas..."
        break
    fi
    echo "[makefast] Esperando a que la Vita libere eboot.bin... ($WAIT s)"
done
echo "[makefast] Listo para subir eboot.bin"

# 2. Subir eboot.bin vía FTP
echo "[makefast] Subiendo $EBOOT_PATH a la Vita..."
curl -v -T "$EBOOT_PATH" "ftp://$PSVITAIP:1337/ux0:/app/$TITLEID/eboot.bin"
CURL_STATUS=$?
echo "[makefast] curl terminó con código $CURL_STATUS"

# 3. Lanzar la app y mostrar respuesta
echo "[makefast] Enviando comando de lanzamiento..."
LAUNCH_RESPONSE=$(echo launch $TITLEID | nc "$PSVITAIP" 1338)
echo "[makefast] Respuesta de vitacompanion: $LAUNCH_RESPONSE"
if echo "$LAUNCH_RESPONSE" | grep -iq launched; then
    echo "[makefast] Launched: $LAUNCH_RESPONSE"
else
    echo "[makefast] Advertencia: No se recibió confirmación de lanzamiento. Respuesta: $LAUNCH_RESPONSE"
fi

echo "[makefast] eboot.bin enviado y app lanzada en la Vita ($PSVITAIP, $TITLEID)"
